{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "inputFile_vInfo",
						"type": "DatasetReference"
					},
					"name": "vInfo"
				},
				{
					"dataset": {
						"referenceName": "inputFile_vCPU",
						"type": "DatasetReference"
					},
					"name": "cpu"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "salidaCPUINFO",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     fileName as string (fileName)",
				"}",
				"source(output(",
				"          VM as string,",
				"          Powerstate as string,",
				"          Template as string,",
				"          {Config status} as string,",
				"          {DNS Name} as string,",
				"          {Connection state} as string,",
				"          {Guest state} as string,",
				"          Heartbeat as string,",
				"          {Consolidation Needed} as string,",
				"          PowerOn as string,",
				"          {Suspend time} as string,",
				"          {Creation date} as string,",
				"          {Change Version} as string,",
				"          CPUs as string,",
				"          Memory as string,",
				"          NICs as string,",
				"          Disks as string,",
				"          {min Required EVC Mode Key } as string,",
				"          {Latency Sensitivity} as string,",
				"          EnableUUID as string,",
				"          CBT as string,",
				"          {Primary IP Address} as string,",
				"          {Network #1} as string,",
				"          {Network #2} as string,",
				"          {Network #3} as string,",
				"          {Network #4} as string,",
				"          {Num Monitors} as string,",
				"          {Video Ram KB} as string,",
				"          {Resource pool} as string,",
				"          Folder as string,",
				"          vApp as string,",
				"          {DAS protection} as string,",
				"          {FT State} as string,",
				"          {FT Latency} as string,",
				"          {FT Bandwidth} as string,",
				"          {FT Sec. Latency} as string,",
				"          {Provisioned MB} as string,",
				"          {In Use MB} as string,",
				"          {Unshared MB} as string,",
				"          {HA Restart Priority} as string,",
				"          {HA Isolation Response} as string,",
				"          {HA VM Monitoring} as string,",
				"          {Cluster rule(s)} as string,",
				"          {Cluster rule name(s)} as string,",
				"          {Boot Required} as string,",
				"          {Boot delay} as string,",
				"          {Boot retry delay} as string,",
				"          {Boot retry enabled} as string,",
				"          {Boot BIOS setup} as string,",
				"          Firmware as string,",
				"          {HW version} as string,",
				"          {HW upgrade status} as string,",
				"          {HW upgrade policy} as string,",
				"          {HW target} as string,",
				"          Path as string,",
				"          {Log directory} as string,",
				"          {Snapshot directory} as string,",
				"          {Suspend directory} as string,",
				"          Annotation as string,",
				"          Datacenter as string,",
				"          Cluster as string,",
				"          Host as string,",
				"          {OS according to the configuration file} as string,",
				"          {OS according to the VMware Tools} as string,",
				"          {VM ID} as string,",
				"          {VM UUID} as string,",
				"          {VI SDK Server type} as string,",
				"          {VI SDK API Version} as string,",
				"          {VI SDK Server} as string,",
				"          {VI SDK UUID} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     rowUrlColumn: 'fileName') ~> vInfo",
				"source(output(",
				"          VM as string,",
				"          Powerstate as string,",
				"          Template as string,",
				"          CPUs as string,",
				"          Sockets as string,",
				"          {Cores p/s} as string,",
				"          Max as string,",
				"          Overall as string,",
				"          Level as string,",
				"          Shares as string,",
				"          Reservation as string,",
				"          Entitlement as string,",
				"          {DRS Entitlement} as string,",
				"          Limit as string,",
				"          {Hot Add} as string,",
				"          {Hot Remove} as string,",
				"          Annotation as string,",
				"          Datacenter as string,",
				"          Cluster as string,",
				"          Host as string,",
				"          Folder as string,",
				"          {OS according to the configuration file} as string,",
				"          {OS according to the VMware Tools} as string,",
				"          {VM ID} as string,",
				"          {VM UUID} as string,",
				"          {VI SDK Server} as string,",
				"          {VI SDK UUID} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> cpu",
				"vInfo, cpu join(vInfo@VM == cpu@VM,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     partitionBy('hash', 1),",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          VM = vInfo@VM,",
				"          Powerstate = vInfo@Powerstate,",
				"          CPUs = cpu@CPUs,",
				"          origin = fileName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     rowUrlColumn:'origin',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}