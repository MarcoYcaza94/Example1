{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "eam-dafafactory-2"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureFunction1LinkedService_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'AzureFunction1LinkedService'"
		},
		"AzureSqlDatabaseConnection1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabaseConnection1'"
		},
		"connectionToStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'connectionToStorage'"
		},
		"AzureFunction1LinkedService_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://eammyfunction1.azurewebsites.net"
		},
		"trigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/40e2b879-c3d4-4ec8-95ce-8347a9e9da15/resourceGroups/eam-selflearning-resourcegroup-2/providers/Microsoft.Storage/storageAccounts/eamstorageaccount2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFunction1LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "I guess this will serve as a connection String to serverless functions",
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AzureFunction1LinkedService_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AzureFunction1LinkedService_functionKey')]"
					},
					"authentication": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseConnection1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabaseConnection1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/connectionToStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('connectionToStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseConnection1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"outputTable": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Make",
						"type": "nvarchar"
					},
					{
						"name": "Model",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "Origin",
						"type": "nvarchar"
					},
					{
						"name": "DriveTrain",
						"type": "nvarchar"
					},
					{
						"name": "Length",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().outputTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseConnection1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseConnection1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseConnection1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cars')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connectionToStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"container": "samples-workitems"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connectionToStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inputFile_vCPU')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connectionToStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "vCPU",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "triggerBody().fileName",
							"type": "Expression"
						},
						"container": "samples-workitems"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "VM",
						"type": "String"
					},
					{
						"name": "Powerstate",
						"type": "String"
					},
					{
						"name": "Template",
						"type": "String"
					},
					{
						"name": "CPUs",
						"type": "String"
					},
					{
						"name": "Sockets",
						"type": "String"
					},
					{
						"name": "Cores p/s",
						"type": "String"
					},
					{
						"name": "Max",
						"type": "String"
					},
					{
						"name": "Overall",
						"type": "String"
					},
					{
						"name": "Level",
						"type": "String"
					},
					{
						"name": "Shares",
						"type": "String"
					},
					{
						"name": "Reservation",
						"type": "String"
					},
					{
						"name": "Entitlement",
						"type": "String"
					},
					{
						"name": "DRS Entitlement",
						"type": "String"
					},
					{
						"name": "Limit",
						"type": "String"
					},
					{
						"name": "Hot Add",
						"type": "String"
					},
					{
						"name": "Hot Remove",
						"type": "String"
					},
					{
						"name": "Annotation",
						"type": "String"
					},
					{
						"name": "Datacenter",
						"type": "String"
					},
					{
						"name": "Cluster",
						"type": "String"
					},
					{
						"name": "Host",
						"type": "String"
					},
					{
						"name": "Folder",
						"type": "String"
					},
					{
						"name": "OS according to the configuration file",
						"type": "String"
					},
					{
						"name": "OS according to the VMware Tools",
						"type": "String"
					},
					{
						"name": "VM ID",
						"type": "String"
					},
					{
						"name": "VM UUID",
						"type": "String"
					},
					{
						"name": "VI SDK Server",
						"type": "String"
					},
					{
						"name": "VI SDK UUID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connectionToStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inputFile_vInfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connectionToStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "vInfo",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "triggerBody().fileName",
							"type": "Expression"
						},
						"container": "samples-workitems"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "VM",
						"type": "String"
					},
					{
						"name": "Powerstate",
						"type": "String"
					},
					{
						"name": "Template",
						"type": "String"
					},
					{
						"name": "Config status",
						"type": "String"
					},
					{
						"name": "DNS Name",
						"type": "String"
					},
					{
						"name": "Connection state",
						"type": "String"
					},
					{
						"name": "Guest state",
						"type": "String"
					},
					{
						"name": "Heartbeat",
						"type": "String"
					},
					{
						"name": "Consolidation Needed",
						"type": "String"
					},
					{
						"name": "PowerOn",
						"type": "String"
					},
					{
						"name": "Suspend time",
						"type": "String"
					},
					{
						"name": "Creation date",
						"type": "String"
					},
					{
						"name": "Change Version",
						"type": "String"
					},
					{
						"name": "CPUs",
						"type": "String"
					},
					{
						"name": "Memory",
						"type": "String"
					},
					{
						"name": "NICs",
						"type": "String"
					},
					{
						"name": "Disks",
						"type": "String"
					},
					{
						"name": "min Required EVC Mode Key ",
						"type": "String"
					},
					{
						"name": "Latency Sensitivity",
						"type": "String"
					},
					{
						"name": "EnableUUID",
						"type": "String"
					},
					{
						"name": "CBT",
						"type": "String"
					},
					{
						"name": "Primary IP Address",
						"type": "String"
					},
					{
						"name": "Network #1",
						"type": "String"
					},
					{
						"name": "Network #2",
						"type": "String"
					},
					{
						"name": "Network #3",
						"type": "String"
					},
					{
						"name": "Network #4",
						"type": "String"
					},
					{
						"name": "Num Monitors",
						"type": "String"
					},
					{
						"name": "Video Ram KB",
						"type": "String"
					},
					{
						"name": "Resource pool",
						"type": "String"
					},
					{
						"name": "Folder",
						"type": "String"
					},
					{
						"name": "vApp",
						"type": "String"
					},
					{
						"name": "DAS protection",
						"type": "String"
					},
					{
						"name": "FT State",
						"type": "String"
					},
					{
						"name": "FT Latency",
						"type": "String"
					},
					{
						"name": "FT Bandwidth",
						"type": "String"
					},
					{
						"name": "FT Sec. Latency",
						"type": "String"
					},
					{
						"name": "Provisioned MB",
						"type": "String"
					},
					{
						"name": "In Use MB",
						"type": "String"
					},
					{
						"name": "Unshared MB",
						"type": "String"
					},
					{
						"name": "HA Restart Priority",
						"type": "String"
					},
					{
						"name": "HA Isolation Response",
						"type": "String"
					},
					{
						"name": "HA VM Monitoring",
						"type": "String"
					},
					{
						"name": "Cluster rule(s)",
						"type": "String"
					},
					{
						"name": "Cluster rule name(s)",
						"type": "String"
					},
					{
						"name": "Boot Required",
						"type": "String"
					},
					{
						"name": "Boot delay",
						"type": "String"
					},
					{
						"name": "Boot retry delay",
						"type": "String"
					},
					{
						"name": "Boot retry enabled",
						"type": "String"
					},
					{
						"name": "Boot BIOS setup",
						"type": "String"
					},
					{
						"name": "Firmware",
						"type": "String"
					},
					{
						"name": "HW version",
						"type": "String"
					},
					{
						"name": "HW upgrade status",
						"type": "String"
					},
					{
						"name": "HW upgrade policy",
						"type": "String"
					},
					{
						"name": "HW target",
						"type": "String"
					},
					{
						"name": "Path",
						"type": "String"
					},
					{
						"name": "Log directory",
						"type": "String"
					},
					{
						"name": "Snapshot directory",
						"type": "String"
					},
					{
						"name": "Suspend directory",
						"type": "String"
					},
					{
						"name": "Annotation",
						"type": "String"
					},
					{
						"name": "Datacenter",
						"type": "String"
					},
					{
						"name": "Cluster",
						"type": "String"
					},
					{
						"name": "Host",
						"type": "String"
					},
					{
						"name": "OS according to the configuration file",
						"type": "String"
					},
					{
						"name": "OS according to the VMware Tools",
						"type": "String"
					},
					{
						"name": "VM ID",
						"type": "String"
					},
					{
						"name": "VM UUID",
						"type": "String"
					},
					{
						"name": "VI SDK Server type",
						"type": "String"
					},
					{
						"name": "VI SDK API Version",
						"type": "String"
					},
					{
						"name": "VI SDK Server",
						"type": "String"
					},
					{
						"name": "VI SDK UUID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connectionToStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/planes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connectionToStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "planes.csv",
						"container": "samples-workitems"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ICAO",
						"type": "String"
					},
					{
						"name": "IATA",
						"type": "String"
					},
					{
						"name": "MAKER",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connectionToStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/salidaCPUINFO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connectionToStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "triggerBody().fileName",
							"type": "Expression"
						},
						"container": "samples-workitems"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connectionToStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/backup storage and insert on SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Pipeline que copia",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Sacar un backup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "cars",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@concat(pipeline().parameters.dataset,'.csv')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"outputTable": {
										"value": "@pipeline().parameters.dataset",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Sacar un backup",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"outputTable": {
										"value": "@pipeline().parameters.dataset\n",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "cars",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@concat(pipeline().parameters.dataset,'-',utcNow(),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"dataset": {
						"type": "string"
					}
				},
				"variables": {
					"x": {
						"type": "String"
					},
					"temp": {
						"type": "Boolean"
					},
					"temp2": {
						"type": "Boolean"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/cars')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger iteration email')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Stage",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n  *\nFROM\n  mySQLDatabaser1.INFORMATION_SCHEMA.TABLES\nWHERE table_type = 'BASE TABLE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Stage').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Export Each table to csv",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {
												"outputTable": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "cars",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@concat(item().TABLE_NAME,'_',utcNow(),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Enviar Correo",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Export Each table to csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://prod-01.centralus.logic.azure.com:443/workflows/fd48cfcbf49246db8731d3872b40949a/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=TFT37WtP-FGa5WFvmbjPHR1-GnD567UwelvbKgD1Vgk",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "{\n    \"title\": \"PIPELINE RUN FINISHED\",\n    \"message\": \"RUNNING SUCCESSFULLY\",\n    \"color\": \"Green\",\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"pipelineName\": \"@{pipeline().DataFactory}\",\n    \"pipelineRunId\": \"@{pipeline().RunId}\",\n    \"time\": \"@{utcnow()}\"\n}",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/cars')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "inputFile_vInfo",
								"type": "DatasetReference"
							},
							"name": "vInfo"
						},
						{
							"dataset": {
								"referenceName": "inputFile_vCPU",
								"type": "DatasetReference"
							},
							"name": "cpu"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "salidaCPUINFO",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "select1"
						},
						{
							"name": "origin"
						}
					],
					"scriptLines": [
						"source(output(",
						"          VM as string,",
						"          Powerstate as string,",
						"          Template as string,",
						"          {Config status} as string,",
						"          {DNS Name} as string,",
						"          {Connection state} as string,",
						"          {Guest state} as string,",
						"          Heartbeat as string,",
						"          {Consolidation Needed} as string,",
						"          PowerOn as string,",
						"          {Suspend time} as string,",
						"          {Creation date} as string,",
						"          {Change Version} as string,",
						"          CPUs as string,",
						"          Memory as string,",
						"          NICs as string,",
						"          Disks as string,",
						"          {min Required EVC Mode Key } as string,",
						"          {Latency Sensitivity} as string,",
						"          EnableUUID as string,",
						"          CBT as string,",
						"          {Primary IP Address} as string,",
						"          {Network #1} as string,",
						"          {Network #2} as string,",
						"          {Network #3} as string,",
						"          {Network #4} as string,",
						"          {Num Monitors} as string,",
						"          {Video Ram KB} as string,",
						"          {Resource pool} as string,",
						"          Folder as string,",
						"          vApp as string,",
						"          {DAS protection} as string,",
						"          {FT State} as string,",
						"          {FT Latency} as string,",
						"          {FT Bandwidth} as string,",
						"          {FT Sec. Latency} as string,",
						"          {Provisioned MB} as string,",
						"          {In Use MB} as string,",
						"          {Unshared MB} as string,",
						"          {HA Restart Priority} as string,",
						"          {HA Isolation Response} as string,",
						"          {HA VM Monitoring} as string,",
						"          {Cluster rule(s)} as string,",
						"          {Cluster rule name(s)} as string,",
						"          {Boot Required} as string,",
						"          {Boot delay} as string,",
						"          {Boot retry delay} as string,",
						"          {Boot retry enabled} as string,",
						"          {Boot BIOS setup} as string,",
						"          Firmware as string,",
						"          {HW version} as string,",
						"          {HW upgrade status} as string,",
						"          {HW upgrade policy} as string,",
						"          {HW target} as string,",
						"          Path as string,",
						"          {Log directory} as string,",
						"          {Snapshot directory} as string,",
						"          {Suspend directory} as string,",
						"          Annotation as string,",
						"          Datacenter as string,",
						"          Cluster as string,",
						"          Host as string,",
						"          {OS according to the configuration file} as string,",
						"          {OS according to the VMware Tools} as string,",
						"          {VM ID} as string,",
						"          {VM UUID} as string,",
						"          {VI SDK Server type} as string,",
						"          {VI SDK API Version} as string,",
						"          {VI SDK Server} as string,",
						"          {VI SDK UUID} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     rowUrlColumn: 'fileName') ~> vInfo",
						"source(output(",
						"          VM as string,",
						"          Powerstate as string,",
						"          Template as string,",
						"          CPUs as string,",
						"          Sockets as string,",
						"          {Cores p/s} as string,",
						"          Max as string,",
						"          Overall as string,",
						"          Level as string,",
						"          Shares as string,",
						"          Reservation as string,",
						"          Entitlement as string,",
						"          {DRS Entitlement} as string,",
						"          Limit as string,",
						"          {Hot Add} as string,",
						"          {Hot Remove} as string,",
						"          Annotation as string,",
						"          Datacenter as string,",
						"          Cluster as string,",
						"          Host as string,",
						"          Folder as string,",
						"          {OS according to the configuration file} as string,",
						"          {OS according to the VMware Tools} as string,",
						"          {VM ID} as string,",
						"          {VM UUID} as string,",
						"          {VI SDK Server} as string,",
						"          {VI SDK UUID} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> cpu",
						"vInfo, cpu join(vInfo@VM == cpu@VM,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     partitionBy('hash', 1),",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          VM = vInfo@VM,",
						"          Powerstate = vInfo@Powerstate,",
						"          CPUs = cpu@CPUs,",
						"          origin = fileName",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(fileName = concat(origin,'_to_here')) ~> origin",
						"origin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['helaa'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/inputFile_vInfo')]",
				"[concat(variables('factoryId'), '/datasets/inputFile_vCPU')]",
				"[concat(variables('factoryId'), '/datasets/salidaCPUINFO')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"vInfo": {},
									"cpu": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"vendorSource": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Periodic Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Vamos a ejecutar periodicamente",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "trigger iteration email",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2022-08-19T07:47:00",
						"endTime": "2022-08-20T00:47:00",
						"timeZone": "E. Europe Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								15
							],
							"weekDays": [
								"Friday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/trigger iteration email')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "dataflow1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/samples-workitems/blobs/",
					"blobPathEndsWith": ".xlsx",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/dataflow1')]"
			]
		}
	]
}